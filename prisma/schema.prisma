// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model voters {
  studentId   String   @id @map("_id")
  studentName String
  email       String
  telephone   String?
  password    String
  del_flag    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  voting   voting[]
}

model position {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  positionName String
  description  String?
  del_flag     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  candidates candidates[]
  voting voting[]
}

model candidates {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  candidateName String
  telephone     String?
  profile       String?
  position     position? @relation(fields: [positionId], references: [id])
  positionId   String?    @db.ObjectId
  del_flag      Boolean    @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  voting voting[]
}

model voting {
id              String     @id @default(auto()) @map("_id") @db.ObjectId
position        position? @relation(fields: [positionId], references: [id])
positionId     String?    @db.ObjectId
candidates      candidates? @relation(fields: [candidatesId], references: [id])
candidatesId    String?    @db.ObjectId
voters          voters?    @relation(fields: [votersId], references: [studentId])
votersId          String?    

}

model user{
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String
  email       String
  password    String
  telephone   String
}